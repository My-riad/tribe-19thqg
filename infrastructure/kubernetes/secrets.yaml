# Kubernetes Secrets Configuration for Tribe Platform
# This file defines secret resources for all microservices
# Values are injected at deployment time from secure environment variables
# Note: All values should be base64 encoded before injection

---
# Database credentials for all services
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: api-services
  labels:
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  auth-service-url: ${BASE64_AUTH_DB_URL}
  profile-service-url: ${BASE64_PROFILE_DB_URL}
  tribe-service-url: ${BASE64_TRIBE_DB_URL}
  matching-service-url: ${BASE64_MATCHING_DB_URL}
  event-service-url: ${BASE64_EVENT_DB_URL}
  engagement-service-url: ${BASE64_ENGAGEMENT_DB_URL}
  planning-service-url: ${BASE64_PLANNING_DB_URL}
  payment-service-url: ${BASE64_PAYMENT_DB_URL}
  notification-service-url: ${BASE64_NOTIFICATION_DB_URL}

---
# Redis connection credentials for caching and session storage
apiVersion: v1
kind: Secret
metadata:
  name: redis-credentials
  namespace: api-services
  labels:
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  auth-service-url: ${BASE64_AUTH_REDIS_URL}
  api-gateway-url: ${BASE64_API_GATEWAY_REDIS_URL}
  ai-orchestration-url: ${BASE64_AI_ORCHESTRATION_REDIS_URL}

---
# Authentication service credentials and tokens
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: api-services
  labels:
    app: auth-service
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  jwt-secret: ${BASE64_JWT_SECRET}
  refresh-token-secret: ${BASE64_REFRESH_TOKEN_SECRET}
  auth0-client-id: ${BASE64_AUTH0_CLIENT_ID}
  auth0-client-secret: ${BASE64_AUTH0_CLIENT_SECRET}
  auth0-domain: ${BASE64_AUTH0_DOMAIN}
  google-client-id: ${BASE64_GOOGLE_CLIENT_ID}
  google-client-secret: ${BASE64_GOOGLE_CLIENT_SECRET}
  apple-client-id: ${BASE64_APPLE_CLIENT_ID}
  apple-client-secret: ${BASE64_APPLE_CLIENT_SECRET}
  facebook-client-id: ${BASE64_FACEBOOK_CLIENT_ID}
  facebook-client-secret: ${BASE64_FACEBOOK_CLIENT_SECRET}

---
# AI Orchestration service API keys
apiVersion: v1
kind: Secret
metadata:
  name: ai-orchestration-secrets
  namespace: ai-services
  labels:
    app: ai-orchestration-service
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  openrouter-api-key: ${BASE64_OPENROUTER_API_KEY}
  openai-api-key: ${BASE64_OPENAI_API_KEY}
  anthropic-api-key: ${BASE64_ANTHROPIC_API_KEY}

---
# Payment service API keys and credentials
apiVersion: v1
kind: Secret
metadata:
  name: payment-service-secrets
  namespace: api-services
  labels:
    app: payment-service
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  stripe-api-key: ${BASE64_STRIPE_API_KEY}
  stripe-webhook-secret: ${BASE64_STRIPE_WEBHOOK_SECRET}
  venmo-api-key: ${BASE64_VENMO_API_KEY}
  venmo-client-id: ${BASE64_VENMO_CLIENT_ID}
  venmo-client-secret: ${BASE64_VENMO_CLIENT_SECRET}

---
# Event service API keys for external providers
apiVersion: v1
kind: Secret
metadata:
  name: event-service-secrets
  namespace: api-services
  labels:
    app: event-service
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  eventbrite-api-key: ${BASE64_EVENTBRITE_API_KEY}
  meetup-api-key: ${BASE64_MEETUP_API_KEY}
  google-places-api-key: ${BASE64_GOOGLE_PLACES_API_KEY}
  openweathermap-api-key: ${BASE64_OPENWEATHERMAP_API_KEY}

---
# Notification service credentials for push, email and SMS
apiVersion: v1
kind: Secret
metadata:
  name: notification-service-secrets
  namespace: api-services
  labels:
    app: notification-service
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  firebase-service-account: ${BASE64_FIREBASE_SERVICE_ACCOUNT}
  sendgrid-api-key: ${BASE64_SENDGRID_API_KEY}
  twilio-account-sid: ${BASE64_TWILIO_ACCOUNT_SID}
  twilio-auth-token: ${BASE64_TWILIO_AUTH_TOKEN}

---
# Monitoring and observability credentials
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secrets
  namespace: monitoring
  labels:
    part-of: tribe
    environment: ${ENVIRONMENT}
type: Opaque
data:
  grafana-admin-password: ${BASE64_GRAFANA_ADMIN_PASSWORD}
  alertmanager-webhook-url: ${BASE64_ALERTMANAGER_WEBHOOK_URL}